{"version":3,"file":"static/js/408.58f76aac.chunk.js","mappings":"qMAeA,EAZkB,SAAC,GAA8B,IAA5BA,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,GACrC,OACE,+BACGD,QADH,IACGA,OADH,EACGA,EAAQE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACX,yBACE,SAAC,KAAD,CAAMH,GAAE,UAAKA,GAAL,OAAUE,GAAME,MAAO,CAAEC,KAAMP,GAAvC,SAAqDK,KAD9CD,U,0MCLJI,EAAW,mCAAG,6GAEJC,IAAAA,IAAA,4FAFI,cAEjBC,EAFiB,yBAGhBA,EAAKA,KAAKC,SAHM,gCAKxBC,QAAQC,IAAI,QAAZ,MALwB,yDAAH,qDASXC,EAAe,mCAAG,WAAOV,GAAP,gGAERK,IAAAA,IAAA,6CAAgDL,EAAhD,8CAFQ,cAErBM,EAFqB,yBAGpBA,EAAKA,MAHe,gCAK3BE,QAAQC,IAAI,QAAZ,MAL2B,yDAAH,sDASfE,EAAgB,mCAAG,WAAOX,GAAP,gGAETK,IAAAA,IAAA,6CAAgDL,EAAhD,sDAFS,cAEtBM,EAFsB,yBAGrBA,EAAKA,KAAKC,SAHW,gCAK5BC,QAAQC,IAAI,QAAZ,MAL4B,yDAAH,sDAShBG,EAAc,mCAAG,WAAOZ,GAAP,gGAEPK,IAAAA,IAAA,6CAAgDL,EAAhD,sDAFO,cAEpBM,EAFoB,yBAGnBA,EAAKA,MAHc,gCAK1BE,QAAQC,IAAI,QAAZ,MAL0B,yDAAH,sDASdI,EAAkB,mCAAG,WAAOC,GAAP,gGAEXT,IAAAA,IAAA,mGAAsGS,IAF3F,cAExBR,EAFwB,yBAGvBA,EAAKA,KAAKC,SAHa,gCAK9BC,QAAQC,IAAI,QAAZ,MAL8B,yDAAH,uD,gICI/B,UArCmB,WACjB,IAAQM,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOH,EAAP,KAAcI,EAAd,KACA,GAAwCD,EAAAA,EAAAA,UAAS,IAAjD,eAAOE,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KACM3B,GAAW4B,EAAAA,EAAAA,MAEXC,EAAY,mCAAG,WAAOC,GAAP,iEACnBA,EAAEC,iBACFJ,EAAgB,CAAET,MAAAA,IAFC,2CAAH,sDAalB,OARAc,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAcP,EAAaQ,IAAI,SAClCD,IACDX,EAASW,IACThB,EAAAA,EAAAA,IAAmBgB,GAAaE,MAAK,SAAAC,GAAG,OAAIZ,EAAgBY,SAE7D,CAACV,KAGF,iCACIP,IAAY,4BACZ,4CACA,kBAAMkB,SAAUR,EAAhB,WACE,kBAAOS,KAAK,OAAOC,SAAU,SAACT,GAAD,OAAOR,EAASQ,EAAEU,OAAOC,QAAQA,MAAOvB,KACrE,mBAAQoB,KAAK,SAAb,sBAEF,SAAC,IAAD,CAAWpC,GAAI,GAAID,OAAQsB,EAAcvB,SAAUA,QAErD,SAAC,EAAA0C,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD","sources":["components/MovieList/MovieList.js","components/services/api.js","pages/MoviesPage.js"],"sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst MovieList = ({ location, movies, to }) => {\r\n  return (\r\n    <ul>\r\n      {movies?.map(({ id, original_title }) => (\r\n        <li key={id}>\r\n          <Link to={`${to}${id}`} state={{ from: location }} >{original_title}</Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default MovieList;\r\n","import axios from \"axios\";\n\nexport const fetchMovies = async () => {\n  try {\n    const data = await axios.get(`https://api.themoviedb.org/3/trending/movie/day?api_key=2cf91cf1fed5026ae9524dc97ad33068`);\n    return data.data.results\n  } catch (error) {\n   console.log('error', error) \n  }\n}\n\nexport const fetchMoviesById = async (id) => {\n  try {\n    const data = await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=2cf91cf1fed5026ae9524dc97ad33068`);\n    return data.data\n  } catch (error) {\n    console.log('error', error)\n  }\n}\n\nexport const fetchReviewsById = async (id) => {\n  try {\n    const data = await axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=2cf91cf1fed5026ae9524dc97ad33068`);\n    return data.data.results\n  } catch (error) {\n    console.log('error', error)    \n  }\n}\n\nexport const fetchCastsById = async (id) => {\n  try {\n    const data = await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=2cf91cf1fed5026ae9524dc97ad33068`);\n    return data.data\n  } catch (error) {\n    console.log('error', error)    \n  }\n}\n\nexport const fetchMoviesByQuery = async (query) => {\n  try {\n    const data = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=2cf91cf1fed5026ae9524dc97ad33068&query=${query}`);\n    return data.data.results\n  } catch (error) {\n    console.log('error', error)    \n  }\n}\n\n","import MovieList from 'components/MovieList';\r\nimport { Suspense, useEffect, useState } from 'react';\r\nimport { Outlet, useLocation, useParams, useSearchParams } from 'react-router-dom';\r\nimport { fetchMoviesByQuery } from '../components/services/api';\r\n\r\nconst MoviesPage = () => {\r\n  const { moviesId } = useParams();\r\n  const [query, setQuery] = useState('')\r\n  const [searchMovies, setSearchMovies] = useState([])\r\n  const [searchParams, setSearchParams] = useSearchParams({});\r\n  const location = useLocation();\r\n\r\n  const HandleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    setSearchParams({ query })\r\n  }\r\n\r\n  useEffect(() => {\r\n    const queryParams = searchParams.get('query')\r\n    if(queryParams){\r\n      setQuery(queryParams)\r\n      fetchMoviesByQuery(queryParams).then(res => setSearchMovies(res))\r\n    }\r\n  }, [searchParams])\r\n\r\n  return (\r\n    <>\r\n      {!moviesId && <div>\r\n        <div>Search movies</div>\r\n        <form onSubmit={HandleSubmit}>\r\n          <input type=\"text\" onChange={(e) => setQuery(e.target.value)} value={query} />\r\n          <button type='submiy'>Send</button>\r\n        </form>\r\n        <MovieList to={''} movies={searchMovies} location={location} />\r\n      </div>}\r\n      <Suspense fallback={<div>Liading...</div>}>\r\n        <Outlet />\r\n      </Suspense>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MoviesPage"],"names":["location","movies","to","map","id","original_title","state","from","fetchMovies","axios","data","results","console","log","fetchMoviesById","fetchReviewsById","fetchCastsById","fetchMoviesByQuery","query","moviesId","useParams","useState","setQuery","searchMovies","setSearchMovies","useSearchParams","searchParams","setSearchParams","useLocation","HandleSubmit","e","preventDefault","useEffect","queryParams","get","then","res","onSubmit","type","onChange","target","value","Suspense","fallback"],"sourceRoot":""}