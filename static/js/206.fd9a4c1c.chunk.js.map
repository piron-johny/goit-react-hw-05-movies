{"version":3,"file":"static/js/206.fd9a4c1c.chunk.js","mappings":"qMAeA,EAZkB,SAAC,GAA8B,IAA5BA,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,GACrC,OACE,+BACGD,QADH,IACGA,OADH,EACGA,EAAQE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACX,yBACE,SAAC,KAAD,CAAMH,GAAE,UAAKA,GAAL,OAAUE,GAAME,MAAO,CAAEC,KAAMP,GAAvC,SAAqDK,KAD9CD,U,0MCLJI,EAAW,mCAAG,6GAEJC,IAAAA,IAAA,4FAFI,cAEjBC,EAFiB,yBAGhBA,EAAKA,KAAKC,SAHM,gCAKxBC,QAAQC,IAAI,QAAZ,MALwB,yDAAH,qDASXC,EAAe,mCAAG,WAAOV,GAAP,gGAERK,IAAAA,IAAA,6CAAgDL,EAAhD,8CAFQ,cAErBM,EAFqB,yBAGpBA,EAAKA,MAHe,gCAK3BE,QAAQC,IAAI,QAAZ,MAL2B,yDAAH,sDASfE,EAAgB,mCAAG,WAAOX,GAAP,gGAETK,IAAAA,IAAA,6CAAgDL,EAAhD,sDAFS,cAEtBM,EAFsB,yBAGrBA,EAAKA,KAAKC,SAHW,gCAK5BC,QAAQC,IAAI,QAAZ,MAL4B,yDAAH,sDAShBG,EAAc,mCAAG,WAAOZ,GAAP,gGAEPK,IAAAA,IAAA,6CAAgDL,EAAhD,sDAFO,cAEpBM,EAFoB,yBAGnBA,EAAKA,MAHc,gCAK1BE,QAAQC,IAAI,QAAZ,MAL0B,yDAAH,sDASdI,EAAkB,mCAAG,WAAOC,GAAP,gGAEXT,IAAAA,IAAA,mGAAsGS,IAF3F,cAExBR,EAFwB,yBAGvBA,EAAKA,KAAKC,SAHa,gCAK9BC,QAAQC,IAAI,QAAZ,MAL8B,yDAAH,uD,uHCX/B,UAtBiB,WACf,OAA4BM,EAAAA,EAAAA,UAAS,IAArC,eAAOlB,EAAP,KAAemB,EAAf,KACMpB,GAAWqB,EAAAA,EAAAA,MAUjB,OARAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,qGACSf,EAAAA,EAAAA,MADT,OACVgB,EADU,OAEhBJ,EAAUI,GAFM,2CAAH,qDAIfD,MACC,KAGD,UAAC,EAAAE,SAAD,CAAUC,UAAU,wCAApB,WACE,8CACA,SAAC,IAAD,CAAWxB,GAAI,UAAWF,SAAUA,EAAUC,OAAQA","sources":["components/MovieList/MovieList.js","components/services/api.js","pages/HomePage.js"],"sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst MovieList = ({ location, movies, to }) => {\r\n  return (\r\n    <ul>\r\n      {movies?.map(({ id, original_title }) => (\r\n        <li key={id}>\r\n          <Link to={`${to}${id}`} state={{ from: location }} >{original_title}</Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default MovieList;\r\n","import axios from \"axios\";\n\nexport const fetchMovies = async () => {\n  try {\n    const data = await axios.get(`https://api.themoviedb.org/3/trending/movie/day?api_key=2cf91cf1fed5026ae9524dc97ad33068`);\n    return data.data.results\n  } catch (error) {\n   console.log('error', error) \n  }\n}\n\nexport const fetchMoviesById = async (id) => {\n  try {\n    const data = await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=2cf91cf1fed5026ae9524dc97ad33068`);\n    return data.data\n  } catch (error) {\n    console.log('error', error)\n  }\n}\n\nexport const fetchReviewsById = async (id) => {\n  try {\n    const data = await axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=2cf91cf1fed5026ae9524dc97ad33068`);\n    return data.data.results\n  } catch (error) {\n    console.log('error', error)    \n  }\n}\n\nexport const fetchCastsById = async (id) => {\n  try {\n    const data = await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=2cf91cf1fed5026ae9524dc97ad33068`);\n    return data.data\n  } catch (error) {\n    console.log('error', error)    \n  }\n}\n\nexport const fetchMoviesByQuery = async (query) => {\n  try {\n    const data = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=2cf91cf1fed5026ae9524dc97ad33068&query=${query}`);\n    return data.data.results\n  } catch (error) {\n    console.log('error', error)    \n  }\n}\n\n","import MovieList from 'components/MovieList'\r\nimport React, { Suspense, useEffect, useState } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { fetchMovies } from '../components/services/api'\r\n\r\nconst HomePage = () => {\r\n  const [movies, setMovies] = useState([])\r\n  const location = useLocation()\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const moviesData = await fetchMovies();\r\n      setMovies(moviesData)\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n  return (\r\n    <Suspense fallback={<div>Liading...</div>}>\r\n      <h1> Trending movies</h1>\r\n      <MovieList to={'movies/'} location={location} movies={movies} />\r\n\r\n    </Suspense>\r\n\r\n  )\r\n}\r\n\r\nexport default HomePage"],"names":["location","movies","to","map","id","original_title","state","from","fetchMovies","axios","data","results","console","log","fetchMoviesById","fetchReviewsById","fetchCastsById","fetchMoviesByQuery","query","useState","setMovies","useLocation","useEffect","fetchData","moviesData","Suspense","fallback"],"sourceRoot":""}